/*
 * Ais-Stream WebsocketObjects
 * OpenAPI 3.0 definitions for the data models used by aisstream.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.github.homebeaver.aismodel;

import java.io.IOException;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets AisMessageTypes
 */
// XXX aus https://github.com/aisstream/ais-message-models
@JsonAdapter(AisMessageTypes.Adapter.class)
public enum AisMessageTypes {
  
  POSITIONREPORT("PositionReport"),
  
  UNKNOWNMESSAGE("UnknownMessage"),
  
  ADDRESSEDSAFETYMESSAGE("AddressedSafetyMessage"),
  
  ADDRESSEDBINARYMESSAGE("AddressedBinaryMessage"),
  
  AIDSTONAVIGATIONREPORT("AidsToNavigationReport"),
  
  ASSIGNEDMODECOMMAND("AssignedModeCommand"),
  
  BASESTATIONREPORT("BaseStationReport"),
  
  BINARYACKNOWLEDGE("BinaryAcknowledge"),
  
  BINARYBROADCASTMESSAGE("BinaryBroadcastMessage"),
  
  CHANNELMANAGEMENT("ChannelManagement"),
  
  COORDINATEDUTCINQUIRY("CoordinatedUTCInquiry"),
  
  DATALINKMANAGEMENTMESSAGE("DataLinkManagementMessage"),
  
  DATALINKMANAGEMENTMESSAGEDATA("DataLinkManagementMessageData"),
  
  EXTENDEDCLASSBPOSITIONREPORT("ExtendedClassBPositionReport"),
  
  GROUPASSIGNMENTCOMMAND("GroupAssignmentCommand"),
  
  GNSSBROADCASTBINARYMESSAGE("GnssBroadcastBinaryMessage"),
  
  INTERROGATION("Interrogation"),
  
  LONGRANGEAISBROADCASTMESSAGE("LongRangeAisBroadcastMessage"),
  
  MULTISLOTBINARYMESSAGE("MultiSlotBinaryMessage"),
  
  SAFETYBROADCASTMESSAGE("SafetyBroadcastMessage"),
  
  SHIPSTATICDATA("ShipStaticData"),
  
  SINGLESLOTBINARYMESSAGE("SingleSlotBinaryMessage"),
  
  STANDARDCLASSBPOSITIONREPORT("StandardClassBPositionReport"),
  
  STANDARDSEARCHANDRESCUEAIRCRAFTREPORT("StandardSearchAndRescueAircraftReport"),
  
  STATICDATAREPORT("StaticDataReport");

  private String value;

  AisMessageTypes(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AisMessageTypes fromValue(String value) {
    for (AisMessageTypes b : AisMessageTypes.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AisMessageTypes> {
    @Override
    public void write(final JsonWriter jsonWriter, final AisMessageTypes enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AisMessageTypes read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AisMessageTypes.fromValue(value);
    }
  }
}

